1. mysql 백업 명령어


특정 디비 백업 : mysqldump -uroot -p[mysql password] [DB명] > [백업 파일명].sql

모든 디비 백업 : mysqldump -uroot –p[mysql password] -A > [백업 파일명].sql



mysql 백업파일로 복구 명령어

mysql -uroot –p[mysql password] [DB name] < [백업파일].sql



2. mysql 백업스크립트 작성

 : vi편집기를 이용해서 /root/backup디렉토리에 mysqldump.sh 파일을 생성합니다.


[root@test ~]# mkdir -p /root/backup /home/db_backup



[root@test ~]# vi /root/backup/mysqldump.sh


#!/bin/sh

function dump() {
MYSQL="/home/mysql/bin/mysql"
MYSQLDUMP="/home/mysql/bin/mysqldump"
OPT="--opt --lock-tables --events"
MPASS="mysql root 패스워드"
TGT="/home/db_backup"
DATE=`/bin/date  +%y%m%d`

DBS="$($MYSQL -u root -p$MPASS -Bse 'show databases')"
for a in ${DBS}
do
        ${MYSQLDUMP} -uroot -p$MPASS ${OPT} ${a} > ${TGT}/${a}_${DATE}.sql
        cd ${TGT}; /bin/tar cvfz  ./${a}_${DATE}.tar.gz  ./${a}_${DATE}.sql
        /bin/rm -f ${TGT}/${a}_${DATE}.sql

# 백업된지 15일 이상 지난 파일 삭제

            /usr/bin/find ${TGT} -name "*.tar.gz" -mtime +15 -exec /bin/rm -f {} ;
done
}

dump



3. mysqldump.sh 백업스크립트 수동실행및 백업파일 확인



[root@test ~]# chmod 700 /root/backup/mysqldump.sh        ### 스크립트 실행을 위한 권한설정

[root@test~]# sh /root/backup/mysqldump.sh                ### mysql 백업스크립트 테스트



4. mysql 백업 파일 확인



[[root@test ~/backup]# ll /home/db_backup/
total 448
-rw-r--r-- 1 root root  63542 2014-11-27 11:30 mysql_141128.tar.gz
-rw-r--r-- 1 root root  68391 2014-11-28 09:33 mysql_141128.tar.gz
-rw-r--r-- 1 root root    578 2014-11-28 09:33 test_141128.tar.gz
-rw-r--r-- 1 root root    476 2014-11-28 09:33 information_schema_141128.tar.gz



백업경로는 /home/db_backup 에 백업되게 되며, 백업스크립트에서 백업된지 15일이상 지난 파일이 있을경우 자동으로 삭제되게 설정되어있습니다

15일이상 보관되는 백업파일용량이 클경우, /home/db_backup 디렉토리 용량을 확인하셔서 주기적으로 삭제하시기 바랍니다.


5. 주기적인 자동 백업 설정

Crontab에 4.에서 작성한 쉘스크립트(dbbackup.sh)파일을 주기적으로 실행하도록 등록합니다,



(1) crontap 설정



ex) 매일 03시 /root/backup/mysqldump.sh 실행



[root@test ~]# crontab -e



vi모드로 창이 하나 열리는데 첫째줄에 아래내용 삽입



00 03 * * * /root/backup/mysqldump.sh



(2) 크론탭 확인



[root@test ~]# crontab –l | grep mysqldump.sh




1. 쿼리 캐시란?

- 테이블의 내용이 자주 변하지 않고 자주 반복되는 select 쿼리를 수행할때, 쿼리를 mysql에서 가져오지 않고
  캐시에서 가져와 속도를 크게 높여주는 기술이다.mysql 4.0.1 이상에서 지원된다.





2. 쿼리 캐시 활성화

- /etc/my.cnf 파일에 다음과 같이 추가합니다.

[root@cafe24 ~]# vi /etc/my.cnf
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# The MySQL server
[mysqld]
port            = 3306
socket          = /tmp/mysql.sock
skip-locking
key_buffer_size = 384M
max_allowed_packet = 1M
table_open_cache = 512
sort_buffer_size = 2M
read_buffer_size = 2M
read_rnd_buffer_size = 8M
myisam_sort_buffer_size = 64M
thread_cache_size = 8
query_cache_size = 32M
# Try number of CPU's*2 for thread_concurrency
thread_concurrency = 8
max_connections = 2048

# Query Cache
query_cache_limit=16M
query_cache_size=32M
query_cache_type=1

#default-character-set=euckr
#character-set-client-handshake = FALSE

# Don't listen on a TCP/IP port at all. This can be a security enhancement,
# if all processes that need to connect to mysqld run on the same host.
# All interaction with mysqld must be made via Unix sockets or named pipes.
# Note that using this option without enabling named pipes on Windows
# (via the "enable-named-pipe" option) will render mysqld useless!
#
#skip-networking

# slow qeury log
log-slow-queries = /home/APM/mysql/var/mysql-slow.log
long_query_time = 3

# Replication Master Server (default)
# binary logging is required for replication
log-bin=mysql-bin
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------



- query_cache_limit : 쿼리 캐싱 제한 메모리

- query_cache_size : 쿼리 캐싱 메모리 사이즈

- query_cache_type : 쿼리 캐싱 타입.

   0 : 사용하지 않음

   1 : 모든 쿼리에 대하여 캐싱을 하고 select 문에서 select sql_no_cache 설정이 있을경우에만 캐싱을 하지 않는다

   2 : 선택한 쿼리만 query cache를 사용한다. (SQL_CACHE 힌트를 사용하는 쿼리는 query cache를 사용한다.)





- 설정이 완료되었으면 mysql을 재시작하여 적용합니다.

[root@cafe24 ~]# /etc/rc.d/init.d/mysql restart
Shutting down MySQL.                                       [  OK  ]
Starting MySQL.                                                 [  OK  ]
[root@cafe24 ~]#









3. 쿼리 캐시 확인
- show status 명령어를 이용하여 모니터링 할 수 있다.

[root@cafe24 ~]# mysql
Welcome to the MySQL monitor.  Commands end with ; or g.
Your MySQL connection id is 1
Server version: 5.1.59-log Source distribution

Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or 'h' for help. Type 'c' to clear the current input statement.

mysql> show status;
+-----------------------------------+----------+
| Variable_name                     | Value    |
+-----------------------------------+----------+
| Aborted_clients                   | 0        |
| Aborted_connects               | 0        |
| Binlog_cache_disk_use          | 0        |
| Binlog_cache_use                | 0        |
| Bytes_received                   | 95       |
| Bytes_sent                         | 161      |
| Com_admin_commands        | 0        |
.

.

.

.

.

.

| Qcache_free_blocks                | 1        |
| Qcache_free_memory             | 33536880 |
| Qcache_hits                          | 0        |
| Qcache_inserts                      | 0        |
| Qcache_lowmem_prunes        | 0        |
| Qcache_not_cached               | 1        |
| Qcache_queries_in_cache        | 0        |
| Qcache_total_blocks               | 1        |
.

.

.

.

| Threads_cached                    | 0        |
| Threads_connected               | 1        |
| Threads_created                   | 1        |
| Threads_running                   | 1        |
| Uptime                                | 5        |
| Uptime_since_flush_status      | 5        |
+-----------------------------------+----------+
291 rows in set (0.00 sec)

mysql>


[root@cafe24 ~]#



- QCache_queries_in_Cache  : 캐시에 등록된 쿼리 갯수. 
- QCache_inserts                    : 캐시에 추가된 쿼리 갯수. 
- QCache_hits                         : 캐시 Hit(적용된) 갯수. 
- QCache_lowmem_prunes    : 메모리 부족으로 캐시에서  삭제된  쿼리  갯수. 
- QCache_not_Cached           : 캐시 불가능한 쿼리 갯수(캐시 불가능하거나 Query_Cache_TYPE에 의해). 
- QCache_free_memory        : Query Cache의 비할당 메모리양. 
- QCache_free_blocks          : Query Cache의 비할당 메모리 블럭의 갯수. 
- QCache_total_blocks         : Query Cache의 총 메모리 블럭 갯수. 



 총 쿼리수 = Qcache_inserts + Qcache_hits + Qcache_not_cached

 Qcache_lowmem_prunes 변수값이 크다면 query cache 메모리가 부족하다는 의미이므로 query_cache_size를 늘여줄 필요가 있습니다.





Query Cache와 관련된 명령어

 flush query cache : query cache를 defragment
 reset query cache : query cache를 clear
 flush tables      : query cache를 flush
 show status       : query cache 성능 모니터링





* 참고사이트 : http://blog.naver.com/hyuk38/20176754765

* 참고사이트 : http://blog.naver.com/hanul27/140007551417


mysql 기본명령어중 mysql root패스워드 변경, mysql 데이터생성 보기 / 삭제 , 권한부여, 권한제거에 대한 간략한 메뉴얼입니다.

※ MySQL에서 root 패스워드 설정

mysqladmin을 이용하여 root 암호 설정

MySQL을 처음 설치하면 root 암호가 설정되어 있지 않기 때문에 반드시 설치 후 바로 root 암호를 먼저 설정해주세요

$ mysqladmin -u root -p password new-password

이러한 명령을 실행하면 됩니다. 실행하면 패스워드를 입력하라고 하는데 처음 root의 패스워드는 없으므로 그냥 엔터를 치시면 root 패스워드가 변경됩니다

update문을 이용하여 root 암호 설정

$ mysql -u root mysql

mysql> update user set password = password('new-password') where user = 'root';
mysql> flush privileges;


※ MySQL에서 Database 보기와 생성, 삭제

데이터베이스 보기

mysql> show databases;

데이터베이스 생성

mysql> create database DB명;

데이터베이스 삭제

mysql> drop database DB명;


※ MySQL 사용자 계정생성 / 삭제

MySQL에서 사용할 Database를 만든 후에 사용자를 추가하려면, 일단 root로 접속한후 작업을 진행하셔야 합니다

$ mysql -uroot -p

Enter password: *******

mysql> use mysql
mysql> INSERT INTO user VALUES('%', '사용자', PASSWORD('비밀번호'),
-> 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y');

이렇게 해서 사용자를 하나 만들었습니다. 맨 처음 ‘%’ 가 붙은 것은 다른 어느 호스트에서도 접속이 가능하게 하기 위해서 입니다. 간단하게 추가 하는 방법이 있습니다.


사용자에게 Database 사용 권한을 주기

mysql> INSERT INTO db (Host, Db, User, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv)
-> VALUES('%', 'DB명', '사용자', 'Y', 'Y', 'Y', 'Y','Y','Y');

사용자 계정 삭제

mysql> use mysql; (DB선택을 미리해야 함)
mysql> delete from user where User='유저명';
mysql> flush privileges;


※ MySQL 권한부여

1) 권한부여(GRANT)
관리자의 권한일 경우

mysql> grant all to 유저명 identified by '패스워드' with grant option;

2) 권한이 없는 일반 사용자의 경우

mysql> grant usage on DB명.* to 유저명 identified by '패스워드' with grant option;

3) 필요 권한만 설정할 경우

mysql> grant select, insert, update, delete, index, alter, create, drop(기타 필요권한 나열)
-> on DB명.* to 유저명 identified by '패스워드' with grant option;

※ MySQL 권한취소


1) 권한들을 취소할 경우

mysql> revoke all privileges, grant from 유저명;

2) 권한 일부 취소를 원할 경우

mysql> revoke alter, create, drop(기타 취소권한 나열)
-> on DB명.*
-> from 유저명;

3) 접근 거부
mysql> revoke all
-> on DB명.*
-> from 유저명;

※ MySQL 재시작 명령어

   mysql : 서버에 root 계정으로 로그인 한 후 명령프롬프트에 다음과 같이 입력합니다.

     - 시작   : [root@cafe24 /root]# /home/mysql/share/mysql/mysql.server start
     - 정지   : [root@cafe24 /root]# /home/mysql/share/mysql/mysql.server stop
     - 시작   : [root@cafe24 /root]# /home/mysql/share/mysql/mysql.server restart



1. mysql 데몬 중지

 

 [root@localhost ~]# /etc/init.d/mysqld stop
 Shutting down MySQL.                                       [  OK  ]

 


2. --skip-grant 옵션을 추가하여 mysql 데몬을 실행한다.

 

 [root@localhost ~]# /etc/init.d/mysqld start --skip-grant
 Starting MySQL.                                            [  OK  ]

 또는

 [root@localhost ~]# /home/mysql/bin/mysqld_safe --skip-grant &

 


3. 패스워드 없이 mysql 접속 후, update 문으로 패스워드를 변경한다. (--skip-grant 모드에서는 mysqladmin이나 set password 구문으로는 변경 불가)

 

 [root@localhost ~]# /home/mysql/bin/mysql -u root
 Welcome to the MySQL monitor.  Commands end with ; or g.
 Your MySQL connection id is 1
 Server version: 5.5.28-log Source distribution

 Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.

 Oracle is a registered trademark of Oracle Corporation and/or its
 affiliates. Other names may be trademarks of their respective
 owners.

 Type 'help;' or 'h' for help. Type 'c' to clear the current input statement.

 mysql> update user set password=password('1234!@#$') where user='root';
 Query OK, 4 rows affected (0.00 sec)
 Rows matched: 4  Changed: 4  Warnings: 0

 mysql>

 

 

4. 변경사항 적용 후 mysql 데몬 restart

 

 mysql> FLUSH PRIVILEGES;

 Query OK, 0 rows affected (0.05 sec)

 mysql> quit

 Bye

 

 [root@localhost ~]# /etc/init.d/mysqld restart
Shutting down MySQL. [ OK ]

Starting MySQL. [ OK ]

 

 

5. 변경한 패스워드로 mysql 접속

 

[root@localhost ~]# /home/mysql/bin/mysql -u root -p

Enter password: *********
 Welcome to the MySQL monitor. Commands end with ; or g.
Your MySQL connection id is 1
Server version: 5.5.28-log Source distribution

Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or 'h' for help. Type 'c' to clear the current input statement.

mysql>

                               



port 포트 강제 닫기
cmd를 관리자 모드로 실행
netstat -aon | findstr 포트번호
taskkill /f /pid PID번호

netstat -ano | findstr 8080
taskkill /f /pid 78688



기본 CMD 경로 변경
Win + R → regedit → Enter
경로 이동:
HKEY_CURRENT_USER\Software\Microsoft\Command Processor
AutoRun 문자열 값이 없다면 새로 만듭니다.
값 데이터에 아래와 같이 입력:
cd /d D:\Projects\MyApp


이제 cmd를 실행하면 항상 해당 폴더에서 시작합니다.
