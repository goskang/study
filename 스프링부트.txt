오라클 우분투 환경설정
1. Java 설정
$ sudo apt-get update
$ sudo apt-get upgrade
또는
$sudo apt-get update && sudo apt-get upgrade

$java -version
$sudo apt-get install openjdk-11-jdk
$sudo apt install openjdk-18-jdk-headless
$java -version

환경설정
JAVA_HOME 설정을 위해 ~/.bashrc 파일에 다음을 추가

# ~/.bashrc 열기
$ sudo gedit ~/.bashrc
sudo vi ~/.bashrc

# ~/.bashrc 파일에 설정 추가
# JAVA_HOME settings
export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
export PATH=$PATH:$JAVA_HOME/bin

# 현재 실행중인 shell에 즉시 적용 (새로 실행한 shell에서는 필요없음)
$ source ~/.bashrc

# 설정 확인
$ echo $JAVA_HOME
/usr/lib/jvm/java-18-openjdk-amd64

$ echo CLASSPATH
:/usr/lib/jvm/java-18-openjdk-amd64/jre/lib/ext:/usr/lib/jvm/java-18-openjdk-amd64/lib/tools.jar

java 테스트
# mkdir javawork
# cd javawork
/javawork# vi Hello.java
/javawork# ls
Hello.java
/javawork# javac Hello.java
/javawork# ls
Hello.class  Hello.java
/javawork# java Hello
Hello?
/javawork#



#!/bin/bash

# compile (lib 폴더 하위에 있는 외부 라이브러리)
javac -cp Hello.java

# java 실행
java -cp Hello

if [ $? -eq 0 ]
then
    echo "compile worked!"
else
    echo "compile failed..."
fi


vim에서 한글 사용
$ echo 'set encoding=utf-8' >> /etc/vimrc
$ echo 'set fileencodings=utf-8,cp949' >> /etc/vimrc
$ echo 'set encoding=utf-8' >> /etc/virc         
$ echo 'set fileencodings=utf-8,cp949' >> /etc/virc
$ vi Hello.java   

쉘스크립트 실행
$ ./runhello.sh  



#!/bin/bash
# 이 파일은 test-project를 자동으로 실행시키는 쉘스크립트 파일이다.
# 전역 설정 방법: 본 파일을 PATH 경로에 위치시키거나, ~/.bashrc를 수정하여 추가하면 된다.

# test-project 디렉터리가 위치한 경로
# ROOT_PATH는 사용자 환경에 따라 다름
ROOT_PATH=/home/test-project

# 디렉터리 이동
cd $ROOT_PATH
cd src

# compile (lib 폴더 하위에 있는 외부 라이브러리)
javac -cp ".:$ROOT_PATH/lib/*" TestProject.java

# java 실행
java -cp ".:$ROOT_PATH/lib/*" TestProject

if [ $? -eq 0 ]
then
    echo "compile worked!"
else
    echo "compile failed..."
fi















# 설치된 JAVA 삭제시
$ sudo apt-get purge openjdk*

방화벽 오픈
$ sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 3306 -j ACCEPT
$ sudo netfilter-persistent save    
$sudo iptables -L

# netfilter-persistent save 안되는 경우
$ sudo apt install -y netfilter-persistent



$sudo passwd root
Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully


$ date
Sat Apr 17 16:46:38 UTC 2021

$ sudo dpkg-roconfigigure tzdata
Current default time zone: 'Asia/Seoul'

마리아DB 설치
$sudo apt-get install -y mariadb-server
$sudo mysql
SELECT @@global.time_zone, @@session.time_zone;

$sudo timedatectl set-timezone 'Asia/Seoul'
#date

$sudo systemctl restart mysqld
$sudo mysql
SELECT now();

root 계정 비밀번호 변경
update user set plugin='' where User='root';
set password = password('YOUR PASSWORD');
set password = password('djflsdl12.');
flush privileges;
$mysql -u root -p
SET GLOBAL time_zone='+09:00';
SET time_zone='+09:00';

외부 IP에서의 접속을 허용하고 싶은 경우
$sudo vim /etc/mysql/mariadb.conf.d/50-server.cnf
bind-address 부분을 0.0.0.0으로 변경하세요.
port = 3306
저장후
$sudo systemctl restart mysqld


$sudo apt-get install rpm
$sudo apt-get install alien
$wget http://repo.mysql.com/mysql80-community-release-el7-1.noarch.rpm
$sudo alien -c mysql80-community-release-el7-1.noarch.rpm

$sudo apt-get install yum
아래와 같은 결과가 반환되며 정상적으로 설치되지 않을 경우 /etc/apt/sources.list 파일에 오류가 있을 수 있습니다.
$sudo cp sources.list sources.list.back
$sudo vi sources.list
# 아래 내용 추가
deb http://archive.ubuntu.com/ubuntu bionic main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu bionic-security main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu bionic-updates main restricted universe multiverse
:wq

apt-get install sudo

# PATH=”/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin”

# export PATH


$sudo apt-get update

$sudo apt-get install wget

$mkdir /downloads

$cd /downloads

$wget http://repo.mysql.com/mysql80-community-release-el7-1.noarch.rpm

$dpkg -i mysql-apt-config_0.8.12-1_all.deb

$apt-cache policy mysql-server

$apt-get update

$apt-cache policy mysql-server

$sudo apt install mysql-client=5.7.*-1ubuntu18.04
$sudo apt install mysql-community-server=5.7.*-1ubuntu18.04

$ps -ef | grep mysq
$ netstat -nap | grep LISTEN

/etc/mysql/mysql.conf.d/mysqld.cnf 을 변경

[mysqld]
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
character-set-server = utf8

[client]
default-character-set=utf8

[mysql]
default-character-set=utf8

https://velog.io/@whattsup_kim/Ubuntu-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0